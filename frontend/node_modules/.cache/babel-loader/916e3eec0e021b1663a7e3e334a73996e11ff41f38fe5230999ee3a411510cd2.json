{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (name, email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(\"/api/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // create a new cart referencing user's _id\n      const token = json.token;\n      const cartResponse = await fetch(\"/api/carts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}` // Include the token in the header\n        },\n        body: JSON.stringify({\n          userID: json._id\n        })\n      });\n      const cartJSON = await cartResponse.json();\n      if (!cartResponse.ok) {\n        console.log(cartResponse.json());\n        setIsLoading(false);\n        setError(cartJSON.error);\n      }\n\n      // save the user to local storage\n      localStorage.setItem(\"user\", JSON.stringify(json));\n\n      // update the AuthContext\n      dispatch({\n        type: \"LOGIN\",\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","name","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","token","cartResponse","Authorization","userID","_id","cartJSON","console","log","localStorage","setItem","type","payload"],"sources":["/Users/stutipatel/Desktop/MERN/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useSignup = () => {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const { dispatch } = useAuthContext();\n\n  const signup = async (name, email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(\"/api/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, email, password }),\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      \n      // create a new cart referencing user's _id\n      const token = json.token;\n      const cartResponse = await fetch(\"/api/carts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`, // Include the token in the header\n        },\n\n        body: JSON.stringify({ userID: json._id }),\n      });\n      const cartJSON = await cartResponse.json();\n      if (!cartResponse.ok) {\n        console.log(cartResponse.json())\n        setIsLoading(false);\n        setError(cartJSON.error);\n      }\n\n      // save the user to local storage\n      localStorage.setItem(\"user\", JSON.stringify(json));\n\n      // update the AuthContext\n      dispatch({ type: \"LOGIN\", payload: json });\n\n      setIsLoading(false);\n    }\n  };\n  return { signup, isLoading, error };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9CL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;MAChDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,IAAI;QAAEC,KAAK;QAAEC;MAAS,CAAC;IAChD,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBd,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;IACtB;IACA,IAAIS,QAAQ,CAACQ,EAAE,EAAE;MAEf;MACA,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK;MACxB,MAAMC,YAAY,GAAG,MAAMT,KAAK,CAAC,YAAY,EAAE;QAC7CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCQ,aAAa,EAAE,UAAUF,KAAK,EAAE,CAAE;QACpC,CAAC;QAEDL,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEM,MAAM,EAAEL,IAAI,CAACM;QAAI,CAAC;MAC3C,CAAC,CAAC;MACF,MAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACH,IAAI,CAAC,CAAC;MAC1C,IAAI,CAACG,YAAY,CAACF,EAAE,EAAE;QACpBO,OAAO,CAACC,GAAG,CAACN,YAAY,CAACH,IAAI,CAAC,CAAC,CAAC;QAChCb,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAACsB,QAAQ,CAACvB,KAAK,CAAC;MAC1B;;MAEA;MACA0B,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAZ,QAAQ,CAAC;QAAEwB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEb;MAAK,CAAC,CAAC;MAE1Cb,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EACD,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAACD,EAAA,CAlDWD,SAAS;EAAA,QAGCD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}