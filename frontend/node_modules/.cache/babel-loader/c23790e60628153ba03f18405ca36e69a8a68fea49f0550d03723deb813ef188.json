{"ast":null,"code":"var _jsxFileName = \"/Users/stutipatel/Desktop/Empire-WebApp/frontend/src/context/GlobalContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  cart: {},\n  wishlist: [],\n  products: [],\n  loading: false,\n  error: null\n};\n\n// Reducer function to handle state updates\nconst globalReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'SET_CART':\n      return {\n        ...state,\n        cart: action.payload\n      };\n    case 'SET_PRODUCTS':\n      return {\n        ...state,\n        products: action.payload\n      };\n    case 'ADD_TO_CART':\n      return {\n        ...state,\n        cart: [...state.cart, action.payload]\n      };\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cart: state.cart.filter(item => item._id !== action.payload)\n      };\n    case 'SET_WISHLIST':\n      return {\n        ...state,\n        wishlist: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nexport const GlobalContext = /*#__PURE__*/createContext();\n\n// Global context provider\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(globalReducer, initialState); //dispatch only sends action object\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = GlobalContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"names":["React","createContext","useReducer","jsxDEV","_jsxDEV","initialState","user","cart","wishlist","products","loading","error","globalReducer","state","action","type","payload","filter","item","_id","GlobalContext","GlobalContextProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stutipatel/Desktop/Empire-WebApp/frontend/src/context/GlobalContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// Initial state\nconst initialState = {\n  user: null,\n  cart: {},\n  wishlist: [],\n  products: [],\n  loading: false,\n  error: null,\n};\n\n// Reducer function to handle state updates\nconst globalReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state, user: action.payload };\n    case 'SET_CART':\n      return { ...state, cart: action.payload };\n    case 'SET_PRODUCTS':\n      return { ...state, products: action.payload };\n    case 'ADD_TO_CART':\n      return { ...state, cart: [...state.cart, action.payload] };\n    case 'REMOVE_FROM_CART':\n      return { ...state, cart: state.cart.filter(item => item._id !== action.payload) };\n    case 'SET_WISHLIST':\n      return { ...state, wishlist: action.payload };\n    default:\n      return state;\n  }\n};\n\n// Create context\nexport const GlobalContext = createContext();\n\n// Global context provider\nexport const GlobalContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(globalReducer, initialState); //dispatch only sends action object\n\n  return (\n    <GlobalContext.Provider value={{ state, dispatch }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,CAAC,CAAC;EACRC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACvC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QAAE,GAAGF,KAAK;QAAEP,IAAI,EAAEQ,MAAM,CAACE;MAAQ,CAAC;IAC3C,KAAK,UAAU;MACb,OAAO;QAAE,GAAGH,KAAK;QAAEN,IAAI,EAAEO,MAAM,CAACE;MAAQ,CAAC;IAC3C,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGH,KAAK;QAAEJ,QAAQ,EAAEK,MAAM,CAACE;MAAQ,CAAC;IAC/C,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGH,KAAK;QAAEN,IAAI,EAAE,CAAC,GAAGM,KAAK,CAACN,IAAI,EAAEO,MAAM,CAACE,OAAO;MAAE,CAAC;IAC5D,KAAK,kBAAkB;MACrB,OAAO;QAAE,GAAGH,KAAK;QAAEN,IAAI,EAAEM,KAAK,CAACN,IAAI,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO;MAAE,CAAC;IACnF,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGH,KAAK;QAAEL,QAAQ,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAC/C;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,aAAa,gBAAGnB,aAAa,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMoB,qBAAqB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGtB,UAAU,CAACU,aAAa,EAAEP,YAAY,CAAC,CAAC,CAAC;;EAEnE,oBACED,OAAA,CAACgB,aAAa,CAACK,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEW;IAAS,CAAE;IAAAF,QAAA,EAChDA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACP,EAAA,CARWF,qBAAqB;AAAAU,EAAA,GAArBV,qBAAqB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}