{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAuthContext } from \"./useAuthContext\";\nimport { useState } from \"react\";\nexport const useLogin = () => {\n  _s();\n  const {\n    dispatch\n  } = useAuthContext();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsloading] = useState(null);\n  const login = async (email, password) => {\n    setIsloading(true);\n    setError(null);\n    const response = await fetch(\"api/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setIsloading(false);\n      return false;\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem(\"user\", JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: \"LOGIN\",\n        payload: json\n      });\n\n      // update loading state\n      setIsloading(false);\n      return true;\n    }\n  };\n  return {\n    login,\n    error,\n    isLoading\n  };\n};\n_s(useLogin, \"hZE/ydk9J8QbmC0U6eGWRwL3qic=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useAuthContext","useState","useLogin","_s","dispatch","error","setError","isLoading","setIsloading","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/Users/stutipatel/Desktop/MERN/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useAuthContext } from \"./useAuthContext\";\nimport { useState } from \"react\";\nexport const useLogin = () => {\n  const { dispatch } = useAuthContext();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsloading] = useState(null);\n\n  const login = async (email, password) => {\n    setIsloading(true);\n    setError(null);\n    \n    const response = await fetch(\"api/users/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password }),\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setIsloading(false);\n      return false\n    }\n\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem(\"user\", JSON.stringify(json));\n\n      // update the auth context\n      dispatch({ type: \"LOGIN\", payload: json });\n\n      // update loading state\n      setIsloading(false);\n      return true\n    }\n  };\n\n  return { login, error, isLoading };\n};\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAS,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACrC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCH,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBd,QAAQ,CAACa,IAAI,CAACd,KAAK,CAAC;MACpBG,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,KAAK;IACd;IAEA,IAAII,QAAQ,CAACQ,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAf,QAAQ,CAAC;QAAEmB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAK,CAAC,CAAC;;MAE1C;MACAX,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,IAAI;IACb;EACF,CAAC;EAED,OAAO;IAAEC,KAAK;IAAEJ,KAAK;IAAEE;EAAU,CAAC;AACpC,CAAC;AAACJ,EAAA,CAnCWD,QAAQ;EAAA,QACEF,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}